{
  "version": 3,
  "sources": ["../../@apollo/src/link/ws/index.ts"],
  "sourcesContent": ["import type { ClientOptions } from \"subscriptions-transport-ws\";\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\n\nimport type { Operation, FetchResult } from \"../core/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nimport type { Observable } from \"../../utilities/index.js\";\n\nexport namespace WebSocketLink {\n  /**\n   * Configuration to use when constructing the subscription client (subscriptions-transport-ws).\n   */\n  export interface Configuration {\n    /**\n     * The endpoint to connect to.\n     */\n    uri: string;\n\n    /**\n     * Options to pass when constructing the subscription client.\n     */\n    options?: ClientOptions;\n\n    /**\n     * A custom WebSocket implementation to use.\n     */\n    webSocketImpl?: any;\n  }\n}\n\n// For backwards compatibility.\nexport import WebSocketParams = WebSocketLink.Configuration;\n\nexport class WebSocketLink extends ApolloLink {\n  private subscriptionClient: SubscriptionClient;\n\n  constructor(\n    paramsOrClient: WebSocketLink.Configuration | SubscriptionClient\n  ) {\n    super();\n\n    if (paramsOrClient instanceof SubscriptionClient) {\n      this.subscriptionClient = paramsOrClient;\n    } else {\n      this.subscriptionClient = new SubscriptionClient(\n        paramsOrClient.uri,\n        paramsOrClient.options,\n        paramsOrClient.webSocketImpl\n      );\n    }\n  }\n\n  public request(operation: Operation): Observable<FetchResult> | null {\n    return this.subscriptionClient.request(\n      operation\n    ) as Observable<FetchResult>;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AACA,wCAAmC;AA+BnC,IAAA;;EAAA,SAAA,QAAA;AAAmC,cAAAA,gBAAA,MAAA;AAGjC,aAAAA,eACE,gBAAgE;AAEhE,UAAA,QAAA,OAAK,KAAA,IAAA,KAAE;AAEP,UAAI,0BAA0B,sDAAoB;AAChD,cAAK,qBAAqB;MAC5B,OAAO;AACL,cAAK,qBAAqB,IAAI,qDAC5B,eAAe,KACf,eAAe,SACf,eAAe,aAAa;MAEhC;;IACF;AAEO,IAAAA,eAAA,UAAA,UAAP,SAAe,WAAoB;AACjC,aAAO,KAAK,mBAAmB,QAC7B,SAAS;IAEb;AACF,WAAAA;EAAA,EAxBmC,UAAU;;",
  "names": ["WebSocketLink"]
}
